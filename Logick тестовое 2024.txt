Условия
- Есть микродвижок на C++, solution которого использует Visual Studio Community 2019, проект на тулсете v140 (2015), Windows.
- Менять исходники движка запрещается (нельзя менять содержимое папки sourceframework). Подразумевается, что решение будет написано в main.cpp и, если в этом есть необходимость, дополнительных файлах (ради удобства и читабельности).

Задача написать классическую игру Змейка. 
Классическая игра Змейка представляет собой простую аркадную игру, в которой игрок управляет змейкой, движущейся по экрану. Цель игры — собирать еду, чтобы змейка становилась длиннее, при этом избегая столкновений с самим собой и стенками экрана. (httpsru.wikipedia.orgwikiЗмейка_(игра))

Основные требования
- Игровое поле должно быть прямоугольным и ограниченным стенками.
- Змейка состоит из 3D головы и тела, которое увеличивается с каждым съеденным объектом еды. Начальная длина змейки — 3 единицы.
- Змейка должна двигаться плавно и постоянно в одном из четырёх направлений (вверх, вниз, влево, вправо).
- Управление змейкой осуществляется с помощью клавиш стрелок (вверх, вниз, влево, вправо).
- Еда появляется случайным образом на игровом поле.
- При поедании еды, змейка становится длиннее на одну клетку, и еда исчезает, после чего появляется новая еда в случайном месте.
- Игра заканчивается, если змейка сталкивается с границами игрового поля или своим собственным телом.

Подсказка
- К проекту подключен OpenGL Mathematics (GLM), в котором есть всё необходимое и даже больше vec3, mat4, quat, spline, lengthnormalizecrossmixlerpslerp и так далее. Но, никто не мешает добавлять свой код, если вам не хватает того, что есть в GLM'е.
- UI не важен. 

То, на что мы обращаем внимание
- Читабельность и чистота кода с понятной архитектурой
- Математическая корректность проводимых операций (не попытка подогнать поведение под желаемое через рандом, а осознанное понимание того, зачем и для чего используется та или иная операция)
- Производительность
